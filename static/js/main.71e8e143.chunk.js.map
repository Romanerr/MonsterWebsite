{"version":3,"sources":["Component/card/card.component.jsx","Component/card-list/card-list.component.jsx","Component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAGP,+BAAKL,EAAMI,QAAQE,KAAnB,OACA,4BAAIN,EAAMI,QAAQG,YCPTC,G,YAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAW,YAAhB,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,WCJfM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCHG,E,kDApCf,aAAc,IAAD,8BACb,gBAYAH,aAAe,SAACI,GAAM,EAAKC,SAAU,CAACC,YAAaF,EAAEG,OAAOC,SAX5D,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAc,IAJH,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,oBAKzC,WAEE,MAA+BC,KAAKN,MAA7Bb,EAAP,EAAOA,SAASU,EAAhB,EAAgBA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,uDACD,cAAC,EAAD,CACEW,YAAa,iBACbC,aAAce,KAAKf,eAJtB,KAOE,cAAC,EAAD,CAAUJ,SAAWoB,W,GA/BTI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.71e8e143.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props =>(\r\n    <div className = 'card-container'>\r\n        <img \r\n        alt=\"monster\" \r\n        src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}\r\n        //src={`http://www.cephalofair.com/${props.monster.id}&size=180x180`}\r\n        />\r\n    <h2>{props.monster.name} </h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react'; \r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\nimport './card.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className ='card-list'>\r\n    {props.monsters.map(monster => (\r\n        <Card key ={monster.id} monster={monster}/>\r\n    ))}\r\n    </div>\r\n ); ","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input \r\n        className = 'search'\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n      />\r\n);","import './App.css';\nimport { Component } from 'react';\nimport{CardList} from './Component/card-list/card-list.component';\nimport{SearchBox} from './Component/search-box/search-box.component';\n\nclass App extends Component {\nconstructor(){\nsuper();\nthis.state = {\n  monsters : [],\n  searchField : ''\n  };\n}\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response =>response.json())\n  .then(users => this.setState({monsters:users}));\n}\n\nhandleChange = (e) =>{this.setState ({searchField :e.target.value})}\n\nrender(){\n\n  const {monsters,searchField } =this.state;\n  const filteredMonsters = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n  return (\n    <div className='App'>\n      <h1>Kittens of Gloomhaven</h1>\n     <SearchBox\n       placeholder={'Search Kittens'} \n       handleChange={this.handleChange}\n     />\n);\n      <CardList monsters ={filteredMonsters }/> \n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}